// tslint:disable
/**
 * Yuforium API Specification
 * Yuforium API specification
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpQuery, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';

export interface ActivityControllerGetRequest {
    activityId: string;
}

export interface ObjectControllerGetRequest {
    id: string;
}

export interface WebfingerControllerWebfingerRequest {
    resource: string;
}

/**
 * no description
 */
export class DefaultApi extends BaseAPI {

    /**
     */
    activityControllerGet({ activityId }: ActivityControllerGetRequest): Observable<void>
    activityControllerGet({ activityId }: ActivityControllerGetRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    activityControllerGet({ activityId }: ActivityControllerGetRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        throwIfNullOrUndefined(activityId, 'activityId', 'activityControllerGet');

        return this.request<void>({
            url: '/activity/{activityId}'.replace('{activityId}', encodeURI(activityId)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    objectControllerGet({ id }: ObjectControllerGetRequest): Observable<void>
    objectControllerGet({ id }: ObjectControllerGetRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    objectControllerGet({ id }: ObjectControllerGetRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'objectControllerGet');

        return this.request<void>({
            url: '/object/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    sharedInboxControllerPostInbox(): Observable<void>
    sharedInboxControllerPostInbox(opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    sharedInboxControllerPostInbox(opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        return this.request<void>({
            url: '/shared-inbox',
            method: 'POST',
        }, opts?.responseOpts);
    };

    /**
     */
    webfingerControllerWebfinger({ resource }: WebfingerControllerWebfingerRequest): Observable<void>
    webfingerControllerWebfinger({ resource }: WebfingerControllerWebfingerRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>
    webfingerControllerWebfinger({ resource }: WebfingerControllerWebfingerRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {
        throwIfNullOrUndefined(resource, 'resource', 'webfingerControllerWebfinger');

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'resource': resource,
        };

        return this.request<void>({
            url: '/.well-known/webfinger',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
